// components/Popup.tsx
import { useEffect } from 'react';

interface PopupProps {
  isOpen: boolean;
  onClose: () => void;
  onSubmit?: () => void;
  title: string;
  size?: 'sm' | 'md' | 'lg' | 'xl';
  showCloseButton?: boolean;
  submitText?: string;
  cancelText?: string;
  children: React.ReactNode;
  disableBackdropClick?: boolean;
  headerClassName?: string;
  bodyClassName?: string;
  footerClassName?: string;
  submitButtonVariant?: string;
  cancelButtonVariant?: string;
}

const Popup = ({
  isOpen,
  onClose,
  onSubmit,
  title,
  size = 'md',
  showCloseButton = true,
  submitText = 'Submit',
  cancelText = 'Cancel',
  children,
  disableBackdropClick = false,
  headerClassName = '',
  bodyClassName = '',
  footerClassName = '',
  submitButtonVariant = 'primary',
  cancelButtonVariant = 'secondary',
}: PopupProps) => {
  useEffect(() => {
    if (isOpen) {
      document.body.classList.add('modal-open');
    } else {
      document.body.classList.remove('modal-open');
    }

    return () => {
      document.body.classList.remove('modal-open');
    };
  }, [isOpen]);

  if (!isOpen) return null;

  const handleBackdropClick = (e: React.MouseEvent) => {
    if (disableBackdropClick) return;
    if (e.target === e.currentTarget) onClose();
  };

  return (
    <>
      <div 
        className="modal fade show" 
        style={{ display: 'block' }}
        onClick={handleBackdropClick}
        role="dialog"
      >
        <div className={`modal-dialog modal-${size} modal-dialog-centered`}>
          <div className="modal-content">
            {/* Header */}
            <div className={`modal-header ${headerClassName}`}>
              <h5 className="modal-title">{title}</h5>
              {showCloseButton && (
                <button
                  type="button"
                  className="btn-close"
                  onClick={onClose}
                  aria-label="Close"
                />
              )}
            </div>

            {/* Body */}
            <div className={`modal-body ${bodyClassName}`}>
              {children}
            </div>

            {/* Footer */}
            {(onSubmit || onClose) && (
              <div className={`modal-footer ${footerClassName}`}>
                <button
                  type="button"
                  className={`btn btn-${cancelButtonVariant}`}
                  onClick={onClose}
                >
                  {cancelText}
                </button>
                
                {onSubmit && (
                  <button
                    type="button"
                    className={`btn btn-${submitButtonVariant}`}
                    onClick={onSubmit}
                  >
                    {submitText}
                  </button>
                )}
              </div>
            )}
          </div>
        </div>
      </div>
      <div className="modal-backdrop fade show"></div>
    </>
  );
};

export default Popup;
